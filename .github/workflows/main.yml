name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - '**.md'

env:
  BUNDLE_PATH: vendor/bundle
  RAILS_ENV: test

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: "npm"

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: npm ci

      - name: Run Ruby linting
        run: bin/standardrb --no-fix

      - name: Run Typescript Linting
        run: npm run lint

  test-import:
    runs-on: ubuntu-latest
    services:
      search:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "ES_JAVA_OPTS": "-Xms512m -Xmx512m"
          "xpack.security.enabled": "false"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      cache:
        image: redis:7-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      database:
        image: postgres:14.3-alpine
        ports:
          - "5432:5432"
        env:
          "POSTGRES_HOST_AUTH_METHOD": "trust"
          "POSTGRES_USER": "rubyapi"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Test Importing Ruby Documentation
        env:
          ELASTICSEARCH_URL: "http://localhost:9200"
        run: bin/rails "import:ruby[3.1.2]"

  test:
    runs-on: ubuntu-latest
    services:
      search:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "ES_JAVA_OPTS": "-Xms512m -Xmx512m"
          "xpack.security.enabled": "false"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      cache:
        image: redis:7-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      database:
        image: postgres:14.3-alpine
        ports:
          - "5432:5432"
        env:
          "POSTGRES_HOST_AUTH_METHOD": "trust"
          "POSTGRES_USER": "rubyapi"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Test Zeitwerk
        run: ./bin/rails zeitwerk:check

      - name: Run Tests
        env:
          ELASTICSEARCH_URL: "http://localhost:9200"
        run: |
          npm run build && npm run build:css
          bin/rails test

  test-system:
    runs-on: ubuntu-latest
    services:
      search:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "ES_JAVA_OPTS": "-Xms512m -Xmx512m"
          "xpack.security.enabled": "false"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      cache:
        image: redis:7-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      database:
        image: postgres:14.3-alpine
        ports:
          - "5432:5432"
        env:
          "POSTGRES_HOST_AUTH_METHOD": "trust"
          "POSTGRES_USER": "rubyapi"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: "npm"

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get -yqq install chromium-chromedriver
          npm install

      - name: Run Tests
        env:
          ELASTICSEARCH_URL: "http://localhost:9200"
        run: |
          npm run build && npm run build:css
          bin/rails test:system
